[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/does-sec-have-biggest-home-field-advantage/index.html",
    "href": "posts/does-sec-have-biggest-home-field-advantage/index.html",
    "title": "DOES THE SEC TRULY HAVE THE BIGGEST HOME FIELD ADVANTAGE IN COLLEGE FOOTBALL?",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(ggbump)\nlibrary(gt)\nlibrary(wehoop)\nlibrary(patchwork)\n\nfootball &lt;- read_csv(\"footballlogs22.csv\")\n\n\nRows: 1672 Columns: 54\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (8): HomeAway, Opponent, Result, TeamFull, TeamURL, Outcome, Team, Con...\ndbl  (45): Game, PassingCmp, PassingAtt, PassingPct, PassingYds, PassingTD, ...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nPointsscored &lt;- football |&gt;\n  group_by(Conference) |&gt;\n  summarize(PointsscoredHomeAway = sum(TeamScore + OpponentScore))\n\nhome &lt;- football |&gt;\n  filter(is.na(HomeAway) == \"TRUE\")\n\nOppscoreH &lt;- football |&gt;\n  group_by(Conference) |&gt;\n  filter(is.na(HomeAway) == \"TRUE\") |&gt;\n  summarize(OpponentScoreHome = mean(OpponentScore))\n\nhomepoints &lt;- home |&gt;\n  group_by(Conference) |&gt;\n  summarize(Pointsathome = mean(TeamScore))\n\n\naway &lt;- football |&gt;\n  filter(HomeAway == \"@\")\n\n\nOppscoreA &lt;- football |&gt;\n  group_by(Conference) |&gt;\nfilter(HomeAway == \"@\")\n  \n  \n\nOppscoreA |&gt;\n  summarize(OpponentScoredAway = mean(OpponentScore))\n\n\n# A tibble: 11 × 2\n   Conference                   OpponentScoredAway\n   &lt;chr&gt;                                     &lt;dbl&gt;\n 1 American Athletic Conference               31.3\n 2 Atlantic Coast Conference                  26.2\n 3 Big 12 Conference                          30.4\n 4 Big Ten Conference                         24.4\n 5 Conference USA                             33.7\n 6 Independent                                30.6\n 7 Mid-American Conference                    29.8\n 8 Mountain West Conference                   27.6\n 9 Pac-12 Conference                          31.7\n10 Southeastern Conference                    29.0\n11 Sun Belt Conference                        28.6\n\n\nCode\nawaypoints &lt;- away |&gt;\n  group_by(Conference) |&gt;\n  summarize(Pointsaway = mean(TeamScore))\n\nggplot() + \n  geom_bump(data=Pointsscored, aes(x=PointsscoredHomeAway, y=Conference, color=Conference)) +\n  geom_bump(data=homepoints, aes(x=Pointsathome, y=Conference, color=Conference)) +\n  geom_point(data=homepoints, aes(x=Pointsathome, y=Conference, color=Conference), size = 4) +\n  geom_bump(data=awaypoints, aes(x=Pointsaway, y=Conference, color=Conference)) +\n  geom_point(data=awaypoints, aes(x=Pointsaway, y=Conference, color=Conference), size = 2) +\n  \n  labs(\n  title=\"Average points scored in college football\", \n  subtitle=\"Big cirlce are points scored at home. Small circle are points away\",\n  caption = \"Source: Sports Reference | By Nic Wiedenhorn\",\n   y= \"Conference\", \n  x = \"Points scored\") +\n  theme_minimal() +\n  \n  \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n    ) \n\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\nWarning in compute_group(...): 'StatBump' needs at least two observations per\ngroup\n\n\n\n\n\n\n\nCode\nTotalgames &lt;- football |&gt;\n  filter(TeamScore &gt; -1) |&gt;\n  group_by(Conference) |&gt;\n  summarize(TotalGames = n())\n  \n\nHome &lt;- football |&gt;\n  filter(is.na(HomeAway) == \"TRUE\")\n\nHomewins &lt;- Home |&gt;\n  group_by(Conference) |&gt;\n  filter(Outcome == \"W\") |&gt;\n   summarize(HomeWins = n()) \n\nbar2 &lt;- ggplot() + geom_bar(data=Homewins, aes(x=reorder(Conference,HomeWins),weight=HomeWins)) +\n  coord_flip()\n\nAway &lt;- football |&gt;\n  group_by(Conference) |&gt;\n  filter(HomeAway == \"@\", Outcome==\"W\") |&gt;\n  summarize(AwayWins = n())\n\n\nbar3 &lt;- ggplot() + geom_bar(data=Away, aes(x=reorder(Conference,AwayWins),weight=AwayWins)) +\n  coord_flip()\n\nSEC &lt;- Homewins |&gt; filter(Conference == \"Southeastern Conference\") \nSEC2 &lt;- Away |&gt; filter(Conference == \"Southeastern Conference\")\nbar2 &lt;- ggplot() + geom_bar(data=Homewins, aes(x=reorder(Conference,HomeWins),weight=HomeWins), fill=\"grey\") +\n  geom_bar(data=SEC, aes(x=reorder(Conference,HomeWins),weight=HomeWins), fill=\"red\") +\n  coord_flip() +\n  labs(\n    x=\"Conference\", \n    y=\"Wins at Home\"\n    ) + \n  theme_minimal() \n\nbar3 &lt;- ggplot() + geom_bar(data=Away, aes(x=reorder(Conference,AwayWins),weight=AwayWins), fill=\"grey\") +\n  geom_bar(data=SEC2, aes(x=reorder(Conference,AwayWins),weight=AwayWins), fill=\"red\") +\n  coord_flip() +\n  labs(\n    x=\"Conference\", \n    y=\"Wins Away\") + \n  theme_minimal() \n\nbar2 + bar3 + \n  plot_annotation(\n    title = \"This shows the amount of college football games won at home and away\",\n    subtitle = \"Games won in each conference depending on the place.\",\n    caption = \"Source: Sports Reference | By Nic Wiedenhorn\"\n  )  & \n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n  )\n\n\n\n\n\n\n\nCode\nhome_data &lt;- football |&gt;\n  filter(is.na(HomeAway) == \"TRUE\") |&gt;\n  group_by(Conference) |&gt;\n  summarize(HomeWins = mean(Outcome == \"W\"))\n\naway_data &lt;- football |&gt;\n  filter(HomeAway == \"@\") |&gt;\n  group_by(Conference) |&gt;\n  summarize(AwayWins = mean(Outcome == \"W\"))\n\nconfwins &lt;- home_data |&gt; inner_join(away_data)\n\n\nJoining with `by = join_by(Conference)`\n\n\nCode\nconfwins |&gt;\n  gt() |&gt;\n  cols_label(\n    HomeWins = \"HomeWinPercentage\",\n    \n    AwayWins = \"AwayWinPercentage\",\n    \n  ) |&gt;\n    fmt_percent(\n    columns = c(HomeWins,AwayWins),\n    decimals = 1\n  ) |&gt;\n  tab_header(\n    title = \"Is the SEC the hardest conference to play away?\",\n    subtitle = \"The SEC has the highest home win percenate out of every conference.\"\n  ) |&gt; tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) |&gt; tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  ) |&gt;\n  tab_source_note(\n    source_note = md(\"Source: Sports Reference | By Nic Wiedenhorn\")\n  ) |&gt;\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=12)\n     )\n  ) |&gt;\n  opt_row_striping() |&gt; \n  opt_table_lines(\"none\") |&gt;\n    \n  tab_style(\n    style = list(\n      cell_fill(color = \"red\"),\n      cell_text(color = \"white\")\n      ),\n    locations = cells_body(\n      rows = Conference == \"Southeastern Conference\")\n  )\n\n\n\n\n\n\n  \n    \n      Is the SEC the hardest conference to play away?\n    \n    \n      The SEC has the highest home win percenate out of every conference.\n    \n    \n      Conference\n      HomeWinPercentage\n      AwayWinPercentage\n    \n  \n  \n    American Athletic Conference\n58.6%\n44.1%\n    Atlantic Coast Conference\n61.1%\n48.6%\n    Big 12 Conference\n69.2%\n45.3%\n    Big Ten Conference\n60.8%\n50.7%\n    Conference USA\n63.1%\n32.9%\n    Independent\n63.4%\n34.2%\n    Mid-American Conference\n51.5%\n41.3%\n    Mountain West Conference\n61.8%\n30.4%\n    Pac-12 Conference\n65.8%\n42.9%\n    Southeastern Conference\n73.5%\n46.9%\n    Sun Belt Conference\n66.3%\n37.8%\n  \n  \n    \n      Source: Sports Reference | By Nic Wiedenhorn"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Latest posts",
    "section": "",
    "text": "DOES THE SEC TRULY HAVE THE BIGGEST HOME FIELD ADVANTAGE IN COLLEGE FOOTBALL?\n\n\n\n\n\n\n\ncollege\n\n\nfootball\n\n\ndata\n\n\n\n\n\n\n\n\n\n\n\nNov 12, 2023\n\n\nNic Wiedenhorn\n\n\n\n\n\n\nNo matching items"
  }
]